% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extensions.R
\name{extensions}
\alias{extensions}
\alias{extension}
\title{NIfTI extensions}
\usage{
extensions(image)

extension(image, code, mode = c("raw", "character", "numeric", "double",
  "integer", "logical", "complex"), ..., simplify = TRUE)
}
\arguments{
\item{image}{An image, in any acceptable form (see \code{\link{asNifti}}).}

\item{code}{Integer value specifying which extension code is required.}

\item{mode}{The required mode of the extracted data.}

\item{...}{Additional arguments to \code{\link{readBin}}.}

\item{simplify}{Logical value. If \code{TRUE}, the default, a single
extension will be returned as a vector; otherwise a list is always
returned.}
}
\value{
For \code{extensions}, a list of raw vectors containing the bytes
  stored in each available header. For \code{extension}, a list of vector
  of values, converted to the required mode, for the extension code
  specified. If the extension code is not used in the image, the return
  value is \code{NULL}.
}
\description{
The NIfTI-1 and NIfTI-2 formats have a simple extension mechanism that
allows additional metadata to be stored with their headers. The format of
this extension data is unspecified by the NIfTI standard, but extension
codes indicate what type of information is present. These functions provide
access to this extension metadata.
}
\note{
A list of registered extension codes is available in the
  \code{nifti2_io.h} header file, which is distributed with this package.
}
\author{
Jon Clayden <code@clayden.org>
}
